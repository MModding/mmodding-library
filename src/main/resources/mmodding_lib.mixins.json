{
  "required": true,
  "minVersion": "0.8",
  "package": "com.mmodding.mmodding_lib.mixin",
  "compatibilityLevel": "JAVA_17",
  "plugin": "com.mmodding.mmodding_lib.mixin.plugin.MModdingLibMixinPlugin",
  "mixins": [
    "accessors.AbstractBlockAccessor",
    "accessors.AbstractBlockSettingsAccessor",
    "accessors.AreaHelperAccessor",
    "accessors.BlockEntityTypeBuilderAccessor",
    "accessors.BlocksAccessor",
    "accessors.BrewingRecipeRegistryAccessor",
    "accessors.BuiltinNoiseParametersAccessor",
    "accessors.ChunkNoiseSamplerAccessor",
    "accessors.ChunkSectionAccessor",
    "accessors.FallingBlockEntityAccessor",
    "accessors.FluidAccessor",
    "accessors.FluidBlockAccessor",
    "accessors.FoliagePlacerTypeAccessor",
    "accessors.IngredientAccessor",
    "accessors.LeveledCauldronBlockAccessor",
    "accessors.NbtByteArrayAccessor",
    "accessors.NbtIntArrayAccessor",
    "accessors.NbtLongArrayAccessor",
    "accessors.NoiseRouterDataAccessor",
    "accessors.OverworldBiomeParametersAccessor",
    "accessors.PointedDripstoneBlockAccessor",
    "accessors.PointOfInterestTypesAccessor",
    "accessors.RootPlacerTypeAccessor",
    "accessors.ScreenHandlerAccessor",
    "accessors.ShapelessRecipeSerializerAccessor",
    "accessors.StyleAccessor",
    "accessors.TreeDecoratorTypeAccessor",
    "accessors.TridentEntityAccessor",
    "accessors.TrunkPlacerTypeAccessor",
    "injectors.AbstractBlockMixin",
    "injectors.AbstractBlockSettingsMixin",
    "injectors.AbstractBlockStateMixin",
    "injectors.AbstractFireBlockMixin",
    "injectors.AnimalEntityMixin",
    "injectors.AnvilScreenHandlerMixin",
    "injectors.ArmorItemMixin",
    "injectors.BlockEntityTypeMixin",
    "injectors.BlockMixin",
    "injectors.BootstrapMixin",
    "injectors.BowItemMixin",
    "injectors.BucketItemMixin",
    "injectors.BuiltinChunkGeneratorsMixin",
    "injectors.CauldronBehaviorMixin",
    "injectors.ChunkGeneratorMixin",
    "injectors.ChunkNoiseSamplerMixin",
    "injectors.ChunkSerializerMixin",
    "injectors.CowEntityMixin",
    "injectors.CraftingScreenHandlerMixin",
    "injectors.EnchantedBookItemMixin",
    "injectors.EnchantmentHelperMixin",
    "injectors.EnchantmentMixin",
    "injectors.EnchantmentScreenHandlerMixin",
    "injectors.EntityMixin",
    "injectors.ExplosionMixin",
    "injectors.FabricEntityTypeBuilderMixin",
    "injectors.FabricEntityTypeBuilderMixin$Living",
    "injectors.FabricEntityTypeBuilderMixin$Mob",
    "injectors.FallingBlockEntityMixin",
    "injectors.FishingBobberEntityMixin",
    "injectors.FlowableFluidMixin",
    "injectors.FluidBlockMixin",
    "injectors.FluidStateMixin",
    "injectors.GeneratorOptionsMixin",
    "injectors.GoatEntityMixin",
    "injectors.HolderDirectMixin",
    "injectors.HolderMixin",
    "injectors.HolderReferenceMixin",
    "injectors.ItemMixin",
    "injectors.ItemStackMixin",
    "injectors.LavaFluidMixin",
    "injectors.LeavesBlockMixin",
    "injectors.ListPoolElementMixin",
    "injectors.LivingEntityMixin",
    "injectors.LootableContainerBlockEntityMixin",
    "injectors.MiningToolItemMixin",
    "injectors.MobEntityMixin",
    "injectors.ModBadgeRendererMixin",
    "injectors.NetherPortalBlockMixin",
    "injectors.NoiseChunkGeneratorMixin",
    "injectors.PacketByteBuffMixin",
    "injectors.PassiveEntityMixin",
    "injectors.PathAwareEntityMixin",
    "injectors.PersistentProjectileEntityMixin",
    "injectors.PlaceCommandMixin",
    "injectors.PlayerEntityMixin",
    "injectors.PointedDripstoneBlockMixin",
    "injectors.PoolStructurePieceMixin",
    "injectors.PortalForcerMixin",
    "injectors.QuiltEntityTypeBuilderMixin",
    "injectors.QuiltEntityTypeBuilderMixin$FabricBuilder",
    "injectors.QuiltEntityTypeBuilderMixin$FabricLiving",
    "injectors.QuiltEntityTypeBuilderMixin$FabricMob",
    "injectors.QuiltEntityTypeBuilderMixin$Living",
    "injectors.QuiltEntityTypeBuilderMixin$Mob",
    "injectors.ServerPlayerEntityMixin",
    "injectors.ServerWorldMixin",
    "injectors.ShearsItemMixin",
    "injectors.SimpleBlockFeatureMixin",
    "injectors.SimpleStructurePieceMixin",
    "injectors.SinglePoolElementMixin",
    "injectors.SlotMixin",
    "injectors.StateMixin",
    "injectors.StructureMixin",
    "injectors.StructurePieceMixin",
    "injectors.StructurePoolElementMixin",
    "injectors.StructureStartMixin",
    "injectors.StructureTemplateManagerMixin",
    "injectors.SwordItemMixin",
    "injectors.ToolItemMixin",
    "injectors.TridentItemMixin",
    "injectors.WeatherCommandMixin",
    "injectors.WorldMixin",
    "injectors.client.ItemModelGeneratorMixin"
  ],
  "client": [
    "accessors.SinglePartEntityModelAccessor",
    "accessors.client.AnimatorAccessor",
    "accessors.client.BufferBuilderStorageAccessor",
    "accessors.client.RenderLayerFirstAccessor",
    "accessors.client.RenderLayerSecondAccessor",
    "accessors.client.RenderPhaseAccessor",
    "accessors.client.SoundLoaderAccessor",
    "injectors.client.ArmorFeatureRendererMixin",
    "injectors.client.ArmorRendererMixin",
    "injectors.client.BackgroundRendererMixin",
    "injectors.client.BakedModelManagerMixin",
    "injectors.client.BuiltinModelItemRendererMixin",
    "injectors.client.BundleTooltipComponentMixin",
    "injectors.client.ClientPlayerEntityMixin",
    "injectors.client.ClientWorldMixin",
    "injectors.client.ElytraFeatureRendererMixin",
    "injectors.client.EntityRendererMixin",
    "injectors.client.EntryListWidgetMixin",
    "injectors.client.FishingBobberEntityRendererMixin",
    "injectors.client.InGameHudMixin",
    "injectors.client.ItemRenderContextMixin",
    "injectors.client.ItemRendererMixin",
    "injectors.client.JsonUnbakedModelMixin",
    "injectors.client.LivingEntityRendererMixin",
    "injectors.client.MinecraftClientMixin",
    "injectors.client.ModelLoaderMixin",
    "injectors.client.MusicTrackerMixin",
    "injectors.client.OggAudioStreamMixin",
    "injectors.client.StuckArrowsFeatureRendererMixin",
    "injectors.client.StuckObjectsFeatureRendererMixin",
    "injectors.client.TridentEntityRendererMixin",
    "injectors.client.WorldRendererMixin"
  ],
  "injectors": {
    "defaultRequire": 1
  }
}
